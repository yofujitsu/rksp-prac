services:
  traefik:
    image: traefik:v2.8
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  app1:
    image: rksp_pr5
    deploy:
      replicas: 4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.services.app.loadbalancer.server.port=80"
#  app2:
#    image: rksp_pr5
#    deploy:
#      replicas: 1
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.app2.rule=Host(`app.localhost`)"
#      - "traefik.http.services.app2.loadbalancer.server.port=80"
#  app3:
#    image: rksp_pr5
#    deploy:
#      replicas: 1
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.app3.rule=Host(`localhost`)"
#      - "traefik.http.services.app3.loadbalancer.server.port=80"
#  app4:
#    image: rksp_pr5
#    deploy:
#      replicas: 1
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.app4.rule=Host(`localhost`)"
#      - "traefik.http.services.app4.loadbalancer.server.port=80"
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: rksp5
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres

volumes:
  postgres:

networks:
  postgres:
    driver: bridge